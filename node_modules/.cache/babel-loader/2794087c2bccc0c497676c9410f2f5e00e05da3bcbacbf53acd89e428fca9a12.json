{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dominik\\\\Desktop\\\\sza\\\\ZadanieOsiem\\\\src\\\\EditStudent.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { StudentClass } from './types/Student';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditStudent({\n  student,\n  updateStudent\n}) {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const studentIndexNr = id ? +id : null;\n  if (studentIndexNr === null || studentIndexNr !== student.Index_nr) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Student not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }, this);\n  }\n  const [editing_student, changeStudentData] = useState({\n    name: student.Name,\n    surname: student.Surname,\n    index_nr: student.Index_nr,\n    dataUrodzenia: student.dataUrodzenia,\n    adres: student.adres,\n    grupa: student.grupa,\n    stypendium: student.stypendium,\n    marks: student.marks\n  });\n  const [backup_student, RestoreStudentData] = useState({\n    name: student.Name,\n    surname: student.Surname,\n    index_nr: student.Index_nr,\n    dataUrodzenia: student.dataUrodzenia,\n    adres: student.adres,\n    grupa: student.grupa,\n    stypendium: student.stypendium,\n    marks: student.marks\n  });\n  useEffect(() => {\n    changeStudentData({\n      name: student.Name,\n      surname: student.Surname,\n      index_nr: student.Index_nr,\n      dataUrodzenia: student.dataUrodzenia,\n      adres: student.adres,\n      grupa: student.grupa,\n      stypendium: student.stypendium,\n      marks: student.marks\n    });\n    RestoreStudentData({\n      name: student.Name,\n      surname: student.Surname,\n      index_nr: student.Index_nr,\n      dataUrodzenia: student.dataUrodzenia,\n      adres: student.adres,\n      grupa: student.grupa,\n      stypendium: student.stypendium,\n      marks: student.marks\n    });\n  }, [student]);\n  const changeValue = e => {\n    const Value = e.currentTarget.value;\n    const name = e.currentTarget.name;\n    let snapshot = {\n      ...editing_student\n    };\n    switch (name) {\n      case 'name':\n        snapshot.name = Value;\n        break;\n      case 'surname':\n        snapshot.surname = Value;\n        break;\n      case 'adres':\n        snapshot.adres = Value;\n        break;\n      case 'birthdate':\n        snapshot.dataUrodzenia = new Date(Value);\n        break;\n    }\n    changeStudentData(snapshot);\n  };\n  const confirm = () => {\n    let updatedStudent = new StudentClass(editing_student.name, editing_student.surname, editing_student.index_nr, editing_student.dataUrodzenia);\n    updatedStudent.adres = editing_student.adres;\n    updatedStudent.grupa = editing_student.grupa;\n    updatedStudent.stypendium = editing_student.stypendium;\n    updatedStudent.marks = editing_student.marks;\n    updateStudent(updatedStudent);\n    navigate('/');\n  };\n  const rewind = () => {\n    changeStudentData(backup_student);\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Name in edit mode: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: editing_student.name,\n      onChange: e => changeValue(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 28\n    }, this), \"Surname in edit mode: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"surname\",\n      value: editing_student.surname,\n      onChange: e => changeValue(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 31\n    }, this), \"Adress in edit mode: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"string\",\n      name: \"adres\",\n      value: editing_student.adres,\n      onChange: e => changeValue(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), \"Date of birth in edit mode: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"birthdate\",\n      onChange: e => changeValue(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => confirm(),\n      children: \"Confirm edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => rewind(),\n      children: \"Cancel edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_s(EditStudent, \"6NXhvgWVyKwqYogOwqAuH5t1Nc4=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditStudent;\nvar _c;\n$RefreshReg$(_c, \"EditStudent\");","map":{"version":3,"names":["useState","useEffect","StudentClass","useNavigate","useParams","jsxDEV","_jsxDEV","EditStudent","student","updateStudent","_s","navigate","id","studentIndexNr","Index_nr","children","fileName","_jsxFileName","lineNumber","columnNumber","editing_student","changeStudentData","name","Name","surname","Surname","index_nr","dataUrodzenia","adres","grupa","stypendium","marks","backup_student","RestoreStudentData","changeValue","e","Value","currentTarget","value","snapshot","Date","confirm","updatedStudent","rewind","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dominik/Desktop/sza/ZadanieOsiem/src/EditStudent.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { StudentClass} from './types/Student';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\ntype StudentPropsType={\r\n    student:StudentClass;\r\n    updateStudent: (updatedStudent: StudentClass) => void;\r\n  }\r\n\r\nexport default function EditStudent({student, updateStudent}: StudentPropsType): React.ReactElement {\r\n   const navigate = useNavigate();\r\n   const { id } = useParams<{ id: string }>(); \r\n   const studentIndexNr = id ? +id : null;\r\n   if (studentIndexNr === null || studentIndexNr !== student.Index_nr) {\r\n       return <p>Student not found!</p>;  \r\n     }\r\n    const [editing_student, changeStudentData]=useState({\r\n        name: student.Name, \r\n        surname: student.Surname, \r\n        index_nr: student.Index_nr, \r\n        dataUrodzenia: student.dataUrodzenia, \r\n        adres: student.adres, \r\n        grupa: student.grupa, \r\n        stypendium: student.stypendium,\r\n        marks: student.marks\r\n      });\r\n      const [backup_student, RestoreStudentData]=useState({\r\n        name: student.Name, \r\n        surname: student.Surname, \r\n        index_nr: student.Index_nr, \r\n        dataUrodzenia: student.dataUrodzenia, \r\n        adres: student.adres, \r\n        grupa: student.grupa, \r\n        stypendium: student.stypendium,\r\n        marks: student.marks\r\n      });\r\n    \r\n      useEffect(() => \r\n        { \r\n        changeStudentData({ \r\n        name: student.Name,\r\n        surname: student.Surname,\r\n        index_nr: student.Index_nr,\r\n        dataUrodzenia: student.dataUrodzenia,\r\n        adres: student.adres, grupa: student.grupa,\r\n        stypendium: student.stypendium,\r\n        marks: student.marks }); \r\n\r\n        RestoreStudentData({ name: student.Name,\r\n        surname: student.Surname,\r\n        index_nr: student.Index_nr,\r\n        dataUrodzenia: student.dataUrodzenia,\r\n        adres: student.adres,\r\n        grupa: student.grupa,\r\n        stypendium: student.stypendium,\r\n        marks: student.marks }); \r\n        },\r\n        [student]);\r\n\r\n      const changeValue=(e:React.FormEvent<HTMLInputElement>):void =>{\r\n        const Value = e.currentTarget.value;\r\n        const name=e.currentTarget.name;\r\n        let snapshot = {... editing_student}\r\n     switch(name) \r\n      {\r\n        case 'name':\r\n            snapshot.name=Value;\r\n            break;\r\n\r\n        case 'surname':\r\n            snapshot.surname=Value;\r\n            break;\r\n            \r\n        case 'adres':\r\n            snapshot.adres=Value;\r\n            break;\r\n\r\n         case 'birthdate':\r\n            snapshot.dataUrodzenia= new Date(Value)\r\n            break;\r\n      }  \r\n      changeStudentData(snapshot);\r\n    }\r\n\r\n    const confirm=():void=>{\r\n    let updatedStudent = new StudentClass(\r\n      editing_student.name,\r\n      editing_student.surname,\r\n      editing_student.index_nr,\r\n      editing_student.dataUrodzenia\r\n      \r\n    );\r\n    updatedStudent.adres = editing_student.adres;\r\n    updatedStudent.grupa = editing_student.grupa;\r\n    updatedStudent.stypendium = editing_student.stypendium;\r\n    updatedStudent.marks = editing_student.marks;\r\n  \r\n    updateStudent(updatedStudent);\r\n   \r\n    navigate('/');\r\n    }\r\n\r\n    const rewind=():void=>{\r\n     changeStudentData(backup_student);\r\n     navigate('/');\r\n    } \r\n\r\n    return (\r\n    \r\n        <div>\r\n        Name in edit mode: <input type='text' name=\"name\" value= {editing_student.name} onChange={(e)=>changeValue(e)}/>\r\n        Surname in edit mode: <input type='text' name=\"surname\" value= {editing_student.surname} onChange={(e)=>changeValue(e)}/>\r\n        Adress in edit mode: <input type='string' name=\"adres\" value= {editing_student.adres} onChange={(e)=>changeValue(e)}/>\r\n        <br></br>\r\n        Date of birth in edit mode: <input type='date' name=\"birthdate\" onChange={(e)=>changeValue(e)}/>\r\n        <button onClick={()=>confirm()}>Confirm edit</button>\r\n        <button onClick={()=>rewind()}>Cancel edit</button>\r\n      </div>\r\n    \r\n    \r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}